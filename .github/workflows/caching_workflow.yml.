name: CI with Dependency Caching

on:
  push:
    branches:
      - main # Or your default branch

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # The caching step must come before the step that installs dependencies.
    - name: Cache npm dependencies
      id: cache-npm
      uses: actions/cache@v4
      with:
        # The path to cache is the npm cache directory.
        # This may vary depending on your package manager (e.g., ~/.gradle, ~/.m2, ~/.nuget).
        path: ~/.npm 
        key: cache-ecb5904

    # This step checks the output of the caching step.
    # On the first run, it will report a cache miss.
    # On subsequent runs, it should report a cache hit.
    - name: Echo cache hit/miss result
      id: prime-cache-ecb5904
      run: |
        if [[ "${{ steps.cache-npm.outputs.cache-hit }}" == "true" ]]; then
          echo "Cache hit for key: ${{ steps.cache-npm.outputs.cache-primary-key }}"
        else
          echo "Cache miss. A new cache will be created."
        fi

    # This is a placeholder for your actual dependency installation.
    # For this example, we'll assume a Node.js project.
    - name: Install Dependencies
      run: npm install # Use 'npm ci' for faster, more reliable installs in a real project
      
    # A placeholder for your build or test steps that use the dependencies.
    - name: Run Build
      run: echo "Build step would run here..."
